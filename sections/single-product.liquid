<script type="application/json">
  window.product = {{ product | json }} || {}{{ product.variants | json }}
</script>
<script type="application/json">
  {{ product.variants | json }}
</script>

<section class="shop-single-section product-details section-padding">
  <div class="container">
    <div class="row">
      <div class="col col-lg-6 col-12">
        <div class="product-single-img">
          <div class="product-active owl-carousel">
            {% for media in product.media %}
              {% if media.media_type == 'image' %}
                <div class="item">
                  <img
                    id="prdImg"
                    src="{{ media.src | image_url: width: 1920  }}"
                    alt="{{ media.srca.alt }}"
                    width=""
                    height=""
                    loading="lazy"
                  >
                </div>
              {% endif %}
            {% endfor %}
          </div>
          <div class="product-thumbnil-active owl-carousel">
            {% for media in product.media %}
              {% if media.media_type == 'image' %}
                <div class="item">
                  <img
                    src="{{ media.src | image_url: width: 300  }}"
                    alt="{{ media.src.alt }}"
                    width=""
                    height=""
                    loading="lazy"
                  >
                </div>
              {% endif %}
            {% endfor %}
          </div>
        </div>
      </div>
      <div class="col col-lg-6 col-12">
        <div class="product-details">
          <div class="details-top">
            {% assign product_collections = product.collections %}
            {% if product_collections.size > 0 %}
              <ul>
                {% for collection in product_collections limit: 1 %}
                  <span><i class="fa fa-trophy" aria-hidden="true"></i>{{ collection.title }}</span>
                {% endfor %}
              </ul>
            {% endif %}
          </div>
          <div class="title">
            <h2>{{ product.title }}</h2>
          </div>
          <h5 id="price">
            {{ cart.currency.symbol -}}
            {{- product.price | money_without_currency }}
          </h5>
          {% unless product.has_only_default_variant %}
            <div class="form-group">
              <select id="variant-selector">
                {% for variant in product.variants %}
                  <option data-variant-id="{{ variant.id }}" value="{{ variant.id }}">{{ variant.title }}</option>
                {% endfor %}
              </select>
            </div>
          {% endunless %}

          <div class="pro-single-btn">
            <div class="quantity cart-plus-minus">
              <input type="text" value="1">
              <div class="dec qtybutton"></div>
              <div class="inc qtybutton"></div>
            </div>

            <input
              type="hidden"
              name="id"
              id="variantId"
              value="{{ product.variants.first.id }}"
            >
            <input
              type="hidden"
              name="quantity"
              id="quantity"
              value="1"
              min="1"
            >
            <input
              type="hidden"
              name="handle"
              id="handle"
              value="{{ product.handle }}"
            >

            <input
              type="hidden"
              name="currency"
              id="currency"
              value="{{cart.currency.symbol}}"
            >

            <div class="buy-btn">
              <a href="#" class="theme-btn addToCart"
                >Add To Cart
                <i
                  class="fa fa-shopping-cart"
                  aria-hidden="true"
                ></i
              ></a>
            </div>
          </div>

          <div class="accordion-section">
            <div class="accordion" id="accordionExample">
              {% for block in section.blocks %}
                {% if block.type == 'info' %}
                  <div class="accordion-item">
                    <h3 class="accordion-header" id="heading{{forloop.index}}">
                      <button
                        class="accordion-button"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#collapse{{forloop.index}}"
                        aria-expanded="true"
                        aria-controls="collapse{{forloop.index}}"
                      >
                        <img
                          src="{{ block.settings.icon | image_url: width: 50  }}"
                          width=""
                          height=""
                          alt="{{ block.settings.icon.alt }}"
                          loading="lazy"
                        >
                        {{ block.settings.title }}
                      </button>
                    </h3>
                    <div
                      id="collapse{{forloop.index}}"
                      class="accordion-collapse collapse"
                      aria-labelledby="heading{{forloop.index}}"
                      data-bs-parent="#accordionExample"
                    >
                      <div class="accordion-body">
                        {{ block.settings.description }}
                      </div>
                    </div>
                  </div>
                {% endif %}
              {% endfor %}
            </div>
          </div>

          {% if product.metafields.custom.download %}
            <div class="downloadManual">
              <a href="{{ product.metafields.custom.download | file_url }}" download target="_blank"
                ><img src="{{ 'file-download.svg' | asset_url }}" alt="" width="" height="" loading="lazy">Download
                Manual</a
              >
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  function formatPrice(price) {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 2,
    }).format(price);
  }
  document.addEventListener('DOMContentLoaded', function () {
    var variantSelector = document.getElementById('variant-selector');
    var productHandle = $('#handle').val();
    var currency = $('#currency').val();

    // Fetch product details
    function fetchProductDetails(handle) {
      fetch(`/products/${handle}.js`)
        .then((response) => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then((data) => {
          console.log('Product Data:', data);
          updateVariantPrices(data);
        })
        .catch((error) => {
          console.error('There was a problem with the fetch operation:', error);
        });
    }

    // Update variant prices based on the selected variant
    function updateVariantPrices(product) {
      variantSelector.addEventListener('change', function () {
        var variantId = this.options[this.selectedIndex].getAttribute('data-variant-id');
        $('#variantId').val(variantId);
        var newUrl = new URL(window.location.href);
        newUrl.searchParams.set('variant', variantId);
        window.history.replaceState({}, '', newUrl);

        // Find the selected variant
        var selectedVariant = product.variants.find((variant) => variant.id === parseInt(variantId));
        var prdImage = selectedVariant?.featured_image
          ? selectedVariant.featured_image.src
          : product.featured_image.src;

        $('#prdImg').attr('src', prdImage);

        if (selectedVariant) {
          console.log('Selected Variant Price:', selectedVariant.price / 100);
          let price = (selectedVariant.price / 100).toFixed(2);
          $('h5#price').text(currency + price);

          // Update the price on the UI
          var priceElement = document.getElementById('variant-price');
          if (priceElement) {
            priceElement.textContent = `Price: ${currency}${price}`;
          }
        }
      });
    }

    // Initialize product details fetch
    fetchProductDetails(productHandle);
  });
</script>

{% schema %}
{
  "name": "Single Product",
  "settings": [],
  "blocks": [
    {
      "name": "Info",
      "type": "info",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Product Details",
          "default": "Product Details"
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "Description",
          "default": "<p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Animi accusamus perferendis ab quia velit dolor quibusdam quas repellendus veritatis asperiores!</p>"
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Single Product",
      "blocks": [
        {
          "type": "info"
        }
      ]
    }
  ]
}
{% endschema %}
